SmartLock Demo Script
Adam Wu, Jackson Kennedy, Neena Nguyen, and Nathaniel Laurente
May 20, 2025

Before the Demo
- Prepare all text messages in advance to copy and paste during the demo.
- All components should be powered by separate batteries, not the laptop.
- The lock must be plugged into a 12V battery, not the laptop.
- The ESP32’s 5V input should also be powered by a battery.
- Set up should look realistic — ideally, the lock should appear connected to a wall power source.
- Be very clear when demonstrating re-authentication steps.

Introduction
Neena: “We built a smart lock solution that lets users lock and unlock their doors from anywhere, at any time—no physical key needed. Our lock supports secure authentication methods and provides flexible, time-based access control.”

Adam: “Here’s our schematic: we have our ESP32-C3 microcontroller and iOS app connected through Firestore Cloud. We handle Wi-Fi configuring using a one time set up access point, receive keypad inputs, and manage OTPs and emergency pins through the app. We also implemented features like logout, access logs, and a secure database for PIN handling.”

Nathaniel: “For the prototype, we’re using a 12V power supply, but our actual product design will include a 12V rechargeable battery.”

Scenario 1: Quick Remote Unlock
Demonstrates quick remote unlock via app.
1. Neena: “Nathaniel is coming home and forgot his keys. Adam plays the dad who’s at work.”
2. Nathaniel: “I forgot my keys, can you unlock the door for me?”
3. Adam: “I just got the text and will press Unlock on the app.”
4. Neena: “You can see the lock has retracted slightly. We’ll show it again for clarity—it’s a subtle visual change.”
5. Nathaniel texts back: “I’m in.”
6. Adam presses Lock.
7. Repeat the unlock/lock flow to show reliability.
8. Neena: “In the final version, we plan a notification system that alerts users if the door remains unlocked.”

Scenario 2: Guest One-Time PIN
Demonstrates one-time PIN functionality for visitors without app access.
1. Neena: “Adam’s brother, Jackson, is visiting from abroad and doesn’t have access to the app.”
2. Jackson: “I just got to the house, how can I get in?”
3. Adam: “I’ll generate a one-time PIN using the app and text it to Jackson.”
4. Jackson inputs the code on the keypad.
5. Neena: “The lock opens and will automatically re-lock in 10 seconds.”
6. Jackson tries the code again — it fails.
7. Neena: “This PIN has been used and is now invalid, but our database logs it. Our system logs all unlocks, lock commands, and Wi-Fi connection events.”

Scenario 3: Wi-Fi Disconnected
Demonstrates emergency PIN fallback when Wi-Fi is unavailable.
1. Neena: “There’s a power outage. The lock is offline and shows a flashing blue LED.”
2. Nathaniel: “I just got home. The lock’s offline, so I’ll text my dad.”
3. Adam: “Since the Wi-Fi is down, I’ll send one of the pre-configured emergency PINs.”
4. Nathaniel enters the emergency PIN.
5. Neena: “The lock opens for 10 seconds, then relocks. Once Wi-Fi is restored, the emergency PIN is blacklisted.”
6. Nathaniel tries the same code again — it fails.
7. Neena: “This ensures security even during Wi-Fi outages.”

Scenario 4: First-Time Setup
Demonstrates setting up the lock for the first time.
1. Adam: “If it’s your first time setting up the lock, plug it in and go to Wi-Fi settings.”
2. Show the lock broadcasting its access point (AP).
3. User connects to the AP and launches setup flow in the app.
4. Adam: “During the initial installation when you first receive the product, setup instructions will be accessible via a QR code in the user manual.”

Conclusion
Nathaniel: “In the future, we plan to move away from Firebase to a more customizable backend using AWS and PostgreSQL for better control and scalability. We’re focused on improving the software reliability and access control features and intend on replacing the ESP32C3 module with a higher performing chip.”

“Our goal was to create a working prototype that demonstrates core features: remote lock/unlock, one-time PINs, emergency offline access, and basic setup. We’ve met those goals, and we’re excited about continuing to iterate on this foundation.”
